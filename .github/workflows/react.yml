name: Build, lint, and deploy frontend
# Runs package scripts on pull requests and commits to master affecting the frontend
# or this workflow itself. Dependencies are cached in Actions to reduce runtime.
# Frontend tests may optionally be added.
#
# Commits to master can access secrets stored in GitHub Environments on this repository
# to deploy into a MinIO bucket. This is a self-hosted solution equivalent to static sites
# hosted out of Amazon S3. For this deploy job to start, a reviewer must further approve
# the deployment for the workflow run under the Actions tab.
#
# Environments can be managed in the Settings tab (https://github.com/ccmbioinfo/stager/settings/environments)
# To add a new environment or rotate secrets for an existing one:
# - create a bucket to host the built static files
# - set an anonymous read access policy on the bucket
# - create an IAM policy that can read and write to the bucket
# - create a machine user with a securely-generated password and apply the above policy
# - set environment secret DEPLOY_MINIO_BUCKET to the name of the designated bucket
# - set environment secret DEPLOY_MC_HOST to https://MACHINE_USER_ACCESS_KEY:GENERATED_SECRET_KEY@minio.domain
#
# The REACT_APP_EMAIL and REACT_APP_MINIO_URL may or may not vary by environment,
# but they are just build parameters.
on:
  push:
    branches:
      - master
    paths:
      - .github/workflows/react.yml
      - react/**/*
  pull_request:
    branches:
      - '*'
    paths:
      - .github/workflows/react.yml
      - react/**/*
defaults:
  run:
    working-directory: react
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # Identical setup steps between jobs
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 14
    - name: Get yarn cache path
      id: yarn-cache-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: restore
      with:
        path: |
          ${{ steps.yarn-cache-path.outputs.dir }}
          react/node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('react/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - run: yarn install
      if: steps.restore.outputs.cache-hit != 'true'
    # End setup
    - run: yarn build
      env:
        REACT_APP_NAME: Stager
        REACT_APP_EMAIL: placeholder@example.ca
        REACT_APP_MINIO_URL: https://minio.example.ca/
    - run: yarn lint
    - run: yarn check-format
    # - run: yarn test --coverage
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    strategy:
      matrix:
        environment:
        - CCM-DEV
        - CHEO-RI
    environment: ${{ matrix.environment }}
    concurrency: ${{ matrix.environment }}
    steps:
    # Identical setup steps between jobs
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 14
    - name: Get yarn cache path
      id: yarn-cache-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: restore
      with:
        path: |
          ${{ steps.yarn-cache-path.outputs.dir }}
          react/node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('react/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - run: yarn install # should never happen due to build job
      if: steps.restore.outputs.cache-hit != 'true'
    # End setup
    - name: Write out endpoints JSON
      run: |
        if [[ "${{ secrets.REACT_APP_LABS_JSON }}" != "" ]]; then
          echo "${{ secrets.REACT_APP_LABS_JSON }}" > public/labs.json
        fi
    - run: yarn build
      env:
        REACT_APP_NAME: Stager
        REACT_APP_EMAIL: ${{ secrets.REACT_APP_EMAIL }}
        REACT_APP_MINIO_URL: ${{ secrets.REACT_APP_MINIO_URL }}
    - name: Deploy
      env:
        MC_HOST_minio: ${{ secrets.DEPLOY_MC_HOST }}
      run: |
        sudo curl --output /usr/local/bin/mc https://dl.min.io/client/mc/release/linux-amd64/mc
        sudo chmod +x /usr/local/bin/mc
        ./deploy.sh minio ${{ secrets.DEPLOY_MINIO_BUCKET }}
