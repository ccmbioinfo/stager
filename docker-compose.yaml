version: "3.9"

services:
  mysql:
    image: mysql:8.0
    restart: on-failure
    environment:
      MYSQL_DATABASE:
      MYSQL_USER:
      MYSQL_PASSWORD:
      MYSQL_ROOT_PASSWORD:
    ports:
      - "${MYSQL_HOST_PORT:-127.0.0.1:3306}:3306"
    volumes:
      - ${MYSQL_VOLUME}:/var/lib/mysql
  minio:
    image: minio/minio:RELEASE.2021-11-03T03-36-36Z
    restart: on-failure
    environment:
      MINIO_ROOT_USER: "${MINIO_ACCESS_KEY}"
      MINIO_ROOT_PASSWORD: "${MINIO_SECRET_KEY}"
      MINIO_REGION_NAME:
      MINIO_UPDATE: "off"
    ports:
      - "${MINIO_HOST_PORT:-127.0.0.1:9000}:9000"
      - "${CONSOLE_HOST_PORT:-127.0.0.1:9090}:9090"
    volumes:
      - ${MINIO_VOLUME}:/data
    command: server /data --console-address ":9090"
  app:
    build: flask
    image: ghcr.io/ccmbioinfo/stager:dev
    environment:
      ST_SECRET_KEY:
      ST_DATABASE_URI: "mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql/${MYSQL_DATABASE}"
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY:
      MINIO_SECRET_KEY:
      MINIO_REGION_NAME:
    ports:
      - "${FLASK_HOST_PORT:-127.0.0.1:5000}:5000"
    depends_on:
      - mysql
      - minio
    volumes:
      - ./flask:/usr/src/stager
  app_debug:
    build: flask
    image: ghcr.io/ccmbioinfo/stager:dev
    profiles:
      - debug
    environment:
      ST_SECRET_KEY:
      ST_DATABASE_URI: "mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql/${MYSQL_DATABASE}"
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY:
      MINIO_SECRET_KEY:
      MINIO_REGION_NAME:
      FLASK_DEBUG: 1
      PYTHONDONTWRITEBYTECODE: 1
      DEBUG_METRICS: 1
    ports:
      - "${FLASK_HOST_PORT:-127.0.0.1:5000}:5000"
      - "${DEBUG_HOST_PORT:-127.0.0.1:5678}:5678"
    depends_on:
      - mysql
      - minio
    volumes:
      - ./flask:/usr/src/stager
    entrypoint: ["python", "-m", "debugpy", "--listen", "0.0.0.0:5678", "-m", "flask", "run", "--host=0.0.0.0"]
  # Simulated production gunicorn configuration
  app_gunicorn: # Try naming this a domain?
    build:
      context: flask
      dockerfile: ../Dockerfile
      args:
        GIT_SHA:
    image: ghcr.io/ccmbioinfo/stager:latest
    profiles:
      - gunicorn
    environment:
      ST_SECRET_KEY:
      ST_DATABASE_URI: "mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql/${MYSQL_DATABASE}"
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY:
      MINIO_SECRET_KEY:
      MINIO_REGION_NAME:
    ports:
      - "${FLASK_HOST_PORT:-127.0.0.1:5000}:5000"
      - "${METRICS_HOST_PORT:-127.0.0.1:8081}:8080"
    labels:
      - traefik.enable=true
      - traefik.http.routers.app.rule=Host(`localhost`) && PathPrefix(`/api`)
      - traefik.http.routers.app.entrypoints=https
      # Assume this works for now, need to confirm with domains
      - traefik.http.middlewares.app.headers.accessControlAllowOriginList=https://stager.ccm.sickkids.ca
      - traefik.http.middlewares.app.headers.accessControlAllowMethods=GET,HEAD,POST,PUT,DELETE,OPTIONS,PATCH
      - traefik.http.middlewares.app.headers.accessControlAllowHeaders=Accept,Content-Type
      - traefik.http.middlewares.app.headers.accessControlAllowCredentials=true
      - traefik.http.middlewares.app.headers.frameDeny=true
    depends_on:
      - mysql
      - minio
  proxy:
    image: traefik:2.5
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik:/etc/traefik
    command:
      - --api.insecure
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --providers.file.directory=/etc/traefik # Can disable watch
      - --accesslog
      - --log
      - --metrics.prometheus
      - --global.checknewversion=false
      - --global.sendanonymoususage=false
      - --entrypoints.http.address=:80
      - --entrypoints.http.http.redirections.entrypoint.to=https
      - --entrypoints.https.http.tls
      - --entrypoints.https.address=:443
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Traefik and Prometheus endpoint
