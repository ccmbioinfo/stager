"""Convert metadataset types and pipelines to code

Revision ID: c137bdb34421
Revises: 7a933f756ef9
Create Date: 2022-03-04 16:35:31.011447

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "c137bdb34421"
down_revision = "7a933f756ef9"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "analysis",
        "qsub_id",
        existing_type=sa.Integer(),
        existing_nullable=True,
        new_column_name="scheduler_id",
    )
    op.add_column("analysis", sa.Column("kind", sa.String(length=50), nullable=False))

    mapping = {1: "short-read genomic", 2: "exomic", 3: "short-read transcriptomic"}
    connection = op.get_bind()
    pipelines = connection.execute(
        sa.select(
            [sa.literal_column("analysis_id"), sa.literal_column("pipeline_id")]
        ).select_from(sa.table("analysis"))
    ).fetchall()
    for id, pipeline in pipelines:
        connection.execute(
            sa.update(sa.table("analysis", sa.column("kind")))
            .where(sa.literal_column("analysis_id") == id)
            .values(kind=mapping[pipeline])
        )

    op.drop_constraint("analysis_ibfk_2", "analysis", type_="foreignkey")
    op.drop_column("analysis", "pipeline_id")

    op.drop_constraint("dataset_ibfk_2", "dataset", type_="foreignkey")
    op.drop_table("metadataset_type_dataset_type")
    op.drop_table("dataset_type")
    op.drop_table("pipeline_datasets")
    op.drop_table("pipeline")
    op.drop_table("metadataset_type")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # These would need a data migration to restore the content of the dropped tables
    # but we aren't going to be downgrading.
    op.create_table(
        "metadataset_type",
        sa.Column("metadataset_type", mysql.VARCHAR(length=50), nullable=False),
        sa.PrimaryKeyConstraint("metadataset_type"),
        mysql_collate="utf8mb4_0900_ai_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "pipeline",
        sa.Column("pipeline_id", mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("pipeline_name", mysql.VARCHAR(length=50), nullable=False),
        sa.Column("pipeline_version", mysql.VARCHAR(length=50), nullable=False),
        sa.PrimaryKeyConstraint("pipeline_id"),
        mysql_collate="utf8mb4_0900_ai_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_index(
        "pipeline_name", "pipeline", ["pipeline_name", "pipeline_version"], unique=False
    )
    op.create_table(
        "pipeline_datasets",
        sa.Column("pipeline_id", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "supported_metadataset_type", mysql.VARCHAR(length=50), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["pipeline_id"],
            ["pipeline.pipeline_id"],
            name="pipeline_datasets_ibfk_1",
            onupdate="CASCADE",
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["supported_metadataset_type"],
            ["metadataset_type.metadataset_type"],
            name="pipeline_datasets_ibfk_2",
        ),
        sa.PrimaryKeyConstraint("pipeline_id", "supported_metadataset_type"),
        mysql_collate="utf8mb4_0900_ai_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "dataset_type",
        sa.Column("dataset_type", mysql.VARCHAR(length=50), nullable=False),
        sa.PrimaryKeyConstraint("dataset_type"),
        mysql_collate="utf8mb4_0900_ai_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "metadataset_type_dataset_type",
        sa.Column("dataset_type", mysql.VARCHAR(length=50), nullable=False),
        sa.Column("metadataset_type", mysql.VARCHAR(length=50), nullable=False),
        sa.ForeignKeyConstraint(
            ["dataset_type"],
            ["dataset_type.dataset_type"],
            name="metadataset_type_dataset_type_ibfk_1",
        ),
        sa.ForeignKeyConstraint(
            ["metadataset_type"],
            ["metadataset_type.metadataset_type"],
            name="metadataset_type_dataset_type_ibfk_2",
        ),
        sa.PrimaryKeyConstraint("dataset_type", "metadataset_type"),
        mysql_collate="utf8mb4_0900_ai_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_index(
        "dataset_type", "metadataset_type_dataset_type", ["dataset_type"], unique=False
    )
    op.create_foreign_key(
        "dataset_ibfk_2", "dataset", "dataset_type", ["dataset_type"], ["dataset_type"]
    )
    op.add_column(
        "analysis",
        sa.Column("pipeline_id", mysql.INTEGER(), autoincrement=False, nullable=False),
    )
    op.create_foreign_key(
        "analysis_ibfk_2",
        "analysis",
        "pipeline",
        ["pipeline_id"],
        ["pipeline_id"],
        onupdate="CASCADE",
        ondelete="RESTRICT",
    )
    op.drop_column("analysis", "kind")
    op.alter_column(
        "analysis",
        "scheduler_id",
        existing_type=sa.Integer(),
        existing_nullable=True,
        new_column_name="qsub_id",
    )
    # ### end Alembic commands ###
